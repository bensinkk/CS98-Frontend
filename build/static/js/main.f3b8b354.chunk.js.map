{"version":3,"sources":["Components/Success.js","Components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Success","props","Grid","container","justify","alignItems","Box","bgcolor","color","height","width","mt","style","fontSize","Typography","component","variant","price","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","form","submit","margin","Main","changeHandler","e","setState","prevState","target","name","value","handleSearch","a","fetch","method","mode","cache","credentials","headers","body","JSON","stringify","bedrooms","state","bathrooms","sqft_living","sqft_lot","floors","waterfront","yr_built","view","then","response","json","data","ok","error","message","statusText","Promise","reject","Intl","NumberFormat","currency","format","console","log","catch","toString","classes","this","Container","CssBaseline","className","direction","item","xs","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","Button","type","onClick","React","Component","withStyles","withTheme","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3b8b354.chunk.js","sourcesContent":["import {Grid, Box, Typography} from '@material-ui/core';\n\nfunction Success(props) {\nreturn (\n    <Grid container \n    justify=\"center\"\n    alignItems=\"center\">\n      <Box bgcolor='#C0C0C0' color='white' height=\"94%\" width=\"50%\" mt={3} style={{ fontSize: '20px' }}>\n        <Typography component=\"h2\" variant=\"h5\">\n          {props.price}\n        </Typography>\n      </Box>\n    </Grid>\n  );\n}\n\nexport default Success;","import '../App.css';\nimport React from 'react';\nimport Success from './Success';\nimport {\n  // eslint-disable-next-line no-unused-vars\n  Button, CssBaseline, TextField, Grid, Typography, Container,\n} from '@material-ui/core';\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      bedrooms: '',\n      bathrooms: '',\n      sqft_living: '',\n      sqft_lot: '',\n      floors: '',\n      waterfront: '',\n      yr_built: '',\n      view: '',\n      price: 'enter information and click submit',\n    }\n  }\n\n  changeHandler = e => {\n    this.setState(prevState => (\n       { ...prevState,[e.target.name]: e.target.value}\n      )\n    )\n  }\n\n  handleSearch = async () => {\n    const url = \"https://cs98-backend.herokuapp.com/test\";\n    fetch(url, { \n      method: 'POST', \n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'same-origin', // include, *same-origin, omit\n      headers: {\n        'Content-Type': 'application/json',\n        // 'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    body: JSON.stringify({  \n      bedrooms: this.state.bedrooms,\n      bathrooms: this.state.bathrooms,\n      sqft_living: this.state.sqft_living,\n      sqft_lot: this.state.sqft_lot,\n      floors: this.state.floors,\n      waterfront: this.state.waterfront,\n      yr_built: this.state.yr_built,\n      view: this.state.view,\n    })})\n    .then(async response => {\n        const data = await response.json();\n\n        // check for error response\n        if (!response.ok) {\n            // get error message from body or default to response statusText\n            const error = (data && data.message) || response.statusText;\n            return Promise.reject(error);\n        }\n\n        const price = new Intl.NumberFormat('ja-JP', { style: 'currency', currency: 'USD' }).format(data[0])\n        console.log(price)\n        this.setState(prevState => ({\n          ...prevState, price: price\n        }))\n      \n\n    })\n    .catch(error => {\n        error.toString()\n        console.error('There was an error!', error);\n    });\n  }\n    \n\n  render() {\n    const {classes} = this.props;\n    return (\n      <Container>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          King County House Price Prediction\n        </Typography>\n        <Grid  spacing={3}           \n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"center\">\n          <Grid item xs={6}>\n            <form className={classes.form} noValidate>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"bedrooms\"\n                label=\"Number of Bedrooms\"\n                name=\"bedrooms\"\n                autoComplete=\"3\"\n                autoFocus\n                onChange={this.changeHandler}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"bathrooms\"\n                label=\"Number of Bathrooms\"\n                id=\"bathrooms\"\n                autoComplete=\"1\"\n                onChange={this.changeHandler}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"sqft_living\"\n                label=\"House SQFT (house size)\"\n                id=\"sqft_living\"\n                autoComplete=\"1100\"\n                onChange={this.changeHandler}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"sqft_lot\"\n                label=\"Lot SQFT (land size)\"\n                id=\"sqft_lot\"\n                autoComplete=\"5650\"\n                onChange={this.changeHandler}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"floors\"\n                label=\"number of floors\"\n                id=\"floors\"\n                autoComplete=\"1\"\n                onChange={this.changeHandler}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"yr_built\"\n                label=\"Year built\"\n                id=\"yr_built\"\n                autoComplete=\"2000\"\n                onChange={this.changeHandler}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"waterfront\"\n                label=\"Is your house waterfront? (type 0 for yes or 1 for no)\"\n                id=\"waterfront\"\n                autoComplete=\"n\"\n                onChange={this.changeHandler}\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"view\"\n                label=\"do you have a view of the city? rate it from 0-4.\"\n                id=\"view\"\n                autoComplete=\"n\"\n                onChange={this.changeHandler}\n              />\n              <Button\n                type=\"button\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={this.handleSearch}\n              >\n                Search\n              </Button>\n            </form>\n          </Grid>\n          <Grid xs={6} \n          item\n          >\n                <Typography component=\"h2\" variant=\"h5\">\n        The cost of your house is:\n    </Typography>\n              <Success price={this.state.price}></Success>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n    );\n  }\n}\n\nexport default withStyles(useStyles, { withTheme: true })(Main);","import Main from './Components/Main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}